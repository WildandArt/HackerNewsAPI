\hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl}{}\doxysection{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl Class Reference}
\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl}\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}


Inheritance diagram for com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl\+:
% FIG 0


Collaboration diagram for com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl\+:
% FIG 1
\doxysubsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_ad7735833ef282556ec250fbef09f1619}{Cache\+Entity\+Impl}} (Integer max\+Size)
\item 
\mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a76268665cbd5f039e3aaf25f10b80b0c}{get}} (Long key)
\begin{DoxyCompactList}\small\item\em Retrieves a post from the cache by its key. \end{DoxyCompactList}\item 
List$<$ \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} $>$ \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aed09ba2e7cb46a44c4062d0c854c4ebd}{get\+All\+Posts}} ()
\begin{DoxyCompactList}\small\item\em Retrieves all posts from the cache. \end{DoxyCompactList}\item 
\mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_acea2f16f8c5055dd1136d88b3e3060fe}{get\+Lowest\+Score\+Post}} ()
\begin{DoxyCompactList}\small\item\em Retrieves the post with the lowest score from the cache. \end{DoxyCompactList}\item 
Integer \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a207a8ec29b712b310ccd7f935dd35744}{get\+Max\+Size}} ()
\begin{DoxyCompactList}\small\item\em Retrieves the maximum size of the cache. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a646830c0a9216b45f10cdbecb79f3adb}{put}} (Long key, \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} value)
\begin{DoxyCompactList}\small\item\em Adds a post to the cache. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a24c36f9ef693bb25974afa823dd85d46}{put\+All\+Posts}} (List$<$ \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} $>$ all\+Posts)
\begin{DoxyCompactList}\small\item\em Adds a list of posts to the cache. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aa475537f2c71b3a976506a240ca01751}{evict}} (Long key)
\begin{DoxyCompactList}\small\item\em Removes a post from the cache by its key. \end{DoxyCompactList}\item 
\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_ab33f241aa75ff0a7d358c3f3086c3d3d}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_ab33f241aa75ff0a7d358c3f3086c3d3d}} 
void \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_ab33f241aa75ff0a7d358c3f3086c3d3d}{clear}} ()
\begin{DoxyCompactList}\small\item\em Clears all entries from the cache. \end{DoxyCompactList}\item 
Integer \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a6c718c07b295cc0dfdaabf2ec30c5967}{size}} ()
\begin{DoxyCompactList}\small\item\em Retrieves the current number of entries in the cache. \end{DoxyCompactList}\item 
\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aa5f25c6b754bb641f2d166ed76bd3541}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aa5f25c6b754bb641f2d166ed76bd3541}} 
void {\bfseries log\+Cache\+Contents} ()
\end{DoxyCompactItemize}


\doxysubsection{Constructor \& Destructor Documentation}
\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_ad7735833ef282556ec250fbef09f1619}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_ad7735833ef282556ec250fbef09f1619}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!CacheEntityImpl@{CacheEntityImpl}}
\index{CacheEntityImpl@{CacheEntityImpl}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{CacheEntityImpl()}{CacheEntityImpl()}}
{\footnotesize\ttfamily com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+Cache\+Entity\+Impl (\begin{DoxyParamCaption}\item[{Integer}]{max\+Size }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}

Constructs a \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl}{Cache\+Entity\+Impl}} with a specified maximum size.


\begin{DoxyParams}{Parameters}
{\em max\+Size} & the maximum number of entries the cache can hold \\
\hline
\end{DoxyParams}


\doxysubsection{Member Function Documentation}
\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aa475537f2c71b3a976506a240ca01751}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aa475537f2c71b3a976506a240ca01751}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!evict@{evict}}
\index{evict@{evict}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{evict()}{evict()}}
{\footnotesize\ttfamily void com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+evict (\begin{DoxyParamCaption}\item[{Long}]{key }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Removes a post from the cache by its key. 


\begin{DoxyParams}{Parameters}
{\em key} & The key of the post to remove. \\
\hline
\end{DoxyParams}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_afd2a6067d91b46513096365fbd4e4e75}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.

\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a76268665cbd5f039e3aaf25f10b80b0c}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a76268665cbd5f039e3aaf25f10b80b0c}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!get@{get}}
\index{get@{get}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{get()}{get()}}
{\footnotesize\ttfamily \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+get (\begin{DoxyParamCaption}\item[{Long}]{key }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Retrieves a post from the cache by its key. 


\begin{DoxyParams}{Parameters}
{\em key} & The key of the post to retrieve. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
The cached post, or null if not found. 
\end{DoxyReturn}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_af18935c459ca395be11eee3d8be4c9bb}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.

\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aed09ba2e7cb46a44c4062d0c854c4ebd}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_aed09ba2e7cb46a44c4062d0c854c4ebd}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!getAllPosts@{getAllPosts}}
\index{getAllPosts@{getAllPosts}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{getAllPosts()}{getAllPosts()}}
{\footnotesize\ttfamily List$<$\mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}}$>$ com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+get\+All\+Posts (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Retrieves all posts from the cache. 

\begin{DoxyReturn}{Returns}
A list of all cached posts, sorted by score in descending order. 
\end{DoxyReturn}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_abb79f9f31ec48ad94178730ae824dbe9}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.

\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_acea2f16f8c5055dd1136d88b3e3060fe}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_acea2f16f8c5055dd1136d88b3e3060fe}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!getLowestScorePost@{getLowestScorePost}}
\index{getLowestScorePost@{getLowestScorePost}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{getLowestScorePost()}{getLowestScorePost()}}
{\footnotesize\ttfamily \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+get\+Lowest\+Score\+Post (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Retrieves the post with the lowest score from the cache. 

\begin{DoxyReturn}{Returns}
The post with the lowest score. 
\end{DoxyReturn}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_a6b2d686b42f59fffa3e2efea83e61a5a}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.

\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a207a8ec29b712b310ccd7f935dd35744}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a207a8ec29b712b310ccd7f935dd35744}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!getMaxSize@{getMaxSize}}
\index{getMaxSize@{getMaxSize}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{getMaxSize()}{getMaxSize()}}
{\footnotesize\ttfamily Integer com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+get\+Max\+Size (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Retrieves the maximum size of the cache. 

\begin{DoxyReturn}{Returns}
The maximum number of entries the cache can hold. 
\end{DoxyReturn}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_ae48de853822ef4b7eac6d300aa27e5df}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.

\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a646830c0a9216b45f10cdbecb79f3adb}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a646830c0a9216b45f10cdbecb79f3adb}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!put@{put}}
\index{put@{put}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{put()}{put()}}
{\footnotesize\ttfamily void com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+put (\begin{DoxyParamCaption}\item[{Long}]{key,  }\item[{\mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}}}]{value }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Adds a post to the cache. 


\begin{DoxyParams}{Parameters}
{\em key} & The key of the post. \\
\hline
{\em value} & The post to add. \\
\hline
\end{DoxyParams}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_ab17629a1e3cf3dee1cc18bbdcde0dee2}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.

\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a24c36f9ef693bb25974afa823dd85d46}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a24c36f9ef693bb25974afa823dd85d46}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!putAllPosts@{putAllPosts}}
\index{putAllPosts@{putAllPosts}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{putAllPosts()}{putAllPosts()}}
{\footnotesize\ttfamily void com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+put\+All\+Posts (\begin{DoxyParamCaption}\item[{List$<$ \mbox{\hyperlink{classcom_1_1artozersky_1_1HackerNewsAPI_1_1model_1_1impl_1_1NewsPostModelImpl}{News\+Post\+Model\+Impl}} $>$}]{all\+Posts }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Adds a list of posts to the cache. 


\begin{DoxyParams}{Parameters}
{\em all\+Posts} & The list of posts to add. \\
\hline
\end{DoxyParams}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_a4a0d5e5b7f2d195c5e982f7945bd1713}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.

\mbox{\Hypertarget{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a6c718c07b295cc0dfdaabf2ec30c5967}\label{classcom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1impl_1_1CacheEntityImpl_a6c718c07b295cc0dfdaabf2ec30c5967}} 
\index{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}!size@{size}}
\index{size@{size}!com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl@{com.artozersky.HackerNewsAPI.cache.impl.CacheEntityImpl}}
\doxysubsubsection{\texorpdfstring{size()}{size()}}
{\footnotesize\ttfamily Integer com.\+artozersky.\+Hacker\+News\+API.\+cache.\+impl.\+Cache\+Entity\+Impl.\+size (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}}



Retrieves the current number of entries in the cache. 

\begin{DoxyReturn}{Returns}
The current size of the cache. 
\end{DoxyReturn}


Implements \mbox{\hyperlink{interfacecom_1_1artozersky_1_1HackerNewsAPI_1_1cache_1_1CacheEntity_a0ba1f41ebf646850eadd58d1cff40f55}{com.\+artozersky.\+Hacker\+News\+API.\+cache.\+Cache\+Entity}}.



The documentation for this class was generated from the following file\+:\begin{DoxyCompactItemize}
\item 
src/main/java/com/artozersky/\+Hacker\+News\+API/cache/impl/Cache\+Entity\+Impl.\+java\end{DoxyCompactItemize}
